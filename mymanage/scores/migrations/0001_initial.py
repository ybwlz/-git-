# Generated by Django 4.2.7 on 2025-03-23 09:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('teachers', '0001_initial'),
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='考试名称')),
                ('description', models.TextField(blank=True, verbose_name='考试描述')),
                ('exam_date', models.DateField(verbose_name='考试日期')),
                ('start_time', models.TimeField(verbose_name='开始时间')),
                ('end_time', models.TimeField(verbose_name='结束时间')),
                ('status', models.CharField(choices=[('pending', '未开始'), ('ongoing', '进行中'), ('completed', '已完成'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('max_score', models.PositiveIntegerField(default=100, verbose_name='满分')),
                ('passing_score', models.PositiveIntegerField(default=60, verbose_name='及格分数')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='考试地点')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='courses.course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '考试',
                'verbose_name_plural': '考试',
                'ordering': ['-exam_date', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='考试类型名称')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '考试类型',
                'verbose_name_plural': '考试类型',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='等级名称')),
                ('min_score', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='最低分数')),
                ('max_score', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='最高分数')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('color_code', models.CharField(default='#000000', max_length=20, verbose_name='颜色代码')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': '表现等级',
                'verbose_name_plural': '表现等级',
                'ordering': ['min_score'],
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='分数')),
                ('comment', models.TextField(blank=True, verbose_name='评语')),
                ('is_absent', models.BooleanField(default=False, verbose_name='是否缺席')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_scores', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='scores.exam', verbose_name='考试')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='students.student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '成绩',
                'verbose_name_plural': '成绩',
                'ordering': ['-exam__exam_date', 'student__name'],
                'unique_together': {('student', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='ScoreStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_count', models.PositiveIntegerField(default=0, verbose_name='考试次数')),
                ('student_count', models.PositiveIntegerField(default=0, verbose_name='参考学生数')),
                ('average_score', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='平均分')),
                ('highest_score', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='最高分')),
                ('lowest_score', models.DecimalField(decimal_places=1, default=0, max_digits=5, verbose_name='最低分')),
                ('pass_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='及格率')),
                ('excellent_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='优秀率')),
                ('statistics_date', models.DateField(default=django.utils.timezone.now, verbose_name='统计日期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_statistics', to='courses.course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '成绩统计',
                'verbose_name_plural': '成绩统计',
                'ordering': ['-statistics_date'],
            },
        ),
        migrations.CreateModel(
            name='ScoreDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100, verbose_name='评分项名称')),
                ('max_point', models.DecimalField(decimal_places=1, default=10, max_digits=5, verbose_name='满分')),
                ('point', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='得分')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='权重')),
                ('comment', models.CharField(blank=True, max_length=200, verbose_name='评语')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='scores.score', verbose_name='成绩')),
            ],
            options={
                'verbose_name': '成绩详情',
                'verbose_name_plural': '成绩详情',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='scores.examtype', verbose_name='考试类型'),
        ),
        migrations.AddField(
            model_name='exam',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='teachers.teacher', verbose_name='考官'),
        ),
    ]
