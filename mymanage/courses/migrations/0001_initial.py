# Generated by Django 4.2.7 on 2025-04-01 12:43

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Piano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, verbose_name='钢琴编号')),
                ('brand', models.CharField(max_length=50, verbose_name='品牌')),
                ('model', models.CharField(max_length=50, verbose_name='型号')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('last_tuned_date', models.DateField(blank=True, null=True, verbose_name='最后调音日期')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('is_occupied', models.BooleanField(default=False, verbose_name='是否被占用')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '钢琴',
                'verbose_name_plural': '钢琴',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='PianoLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, '1级'), (2, '2级'), (3, '3级'), (4, '4级'), (5, '5级'), (6, '6级'), (7, '7级'), (8, '8级'), (9, '9级'), (10, '10级')], unique=True, verbose_name='等级')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '钢琴等级',
                'verbose_name_plural': '钢琴等级',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='SheetMusic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='曲谱名称')),
                ('composer', models.CharField(max_length=100, verbose_name='作曲家')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('file', models.FileField(upload_to='sheet_music/', verbose_name='曲谱文件')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='sheet_music/covers/', verbose_name='封面图片')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='上传日期')),
                ('is_public', models.BooleanField(default=True, verbose_name='是否公开')),
                ('difficulty', models.CharField(choices=[('入门级', '入门级'), ('初级', '初级'), ('中级', '中级'), ('高级', '高级'), ('专业级', '专业级')], default='中级', max_length=20, verbose_name='难度级别')),
                ('style', models.CharField(choices=[('古典', '古典'), ('浪漫', '浪漫'), ('现代', '现代'), ('爵士', '爵士'), ('流行', '流行')], default='古典', max_length=20, verbose_name='曲谱风格')),
                ('period', models.CharField(choices=[('巴洛克', '巴洛克'), ('古典主义', '古典主义'), ('浪漫主义', '浪漫主义'), ('现代主义', '现代主义'), ('当代', '当代')], default='古典主义', max_length=20, verbose_name='时期')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sheet_music', to='courses.pianolevel')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_sheet_music', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '曲谱',
                'verbose_name_plural': '曲谱',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='课程名称')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='课程代码')),
                ('description', models.TextField(blank=True, verbose_name='课程描述')),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=1800), verbose_name='标准练习时长')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.pianolevel', verbose_name='钢琴等级')),
                ('students', models.ManyToManyField(blank=True, related_name='courses', to='students.student', verbose_name='学生')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='teachers.teacherprofile', verbose_name='教师')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, '周一'), (1, '周二'), (2, '周三'), (3, '周四'), (4, '周五'), (5, '周六'), (6, '周日')], verbose_name='星期几')),
                ('start_time', models.TimeField(verbose_name='开始时间')),
                ('end_time', models.TimeField(verbose_name='结束时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='courses.course')),
            ],
            options={
                'verbose_name': '课程安排',
                'verbose_name_plural': '课程安排',
                'ordering': ['weekday', 'start_time'],
                'unique_together': {('course', 'weekday', 'start_time')},
            },
        ),
    ]
